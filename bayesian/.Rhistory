notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 10
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
res
dim(res)
N = 10
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-4], prob)
}
}
res
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-4], prob)
}
}
Z
sum(Z)
sum(Y-Z)
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-4], prob)
}
}
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
#print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-4], prob)
}
}
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
#print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
print(prob)
res[i,j] = rbinom(1, Y[j-4], prob)
}
prob
res
s
s
s
s
s
s
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
#print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
print(prob)
res[i,j] = rbinom(1, Y[j-4], prob)
}
}
1+1
2+2
+3+4
4
4
f
f
f
f
1+1
prob
prob
N = 2
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
#print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
print(prob)
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
N = 10
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
#print(Z)
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
print(prob)
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
res
N = 1000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
print(res[i,])
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
N = 1000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
res
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 10000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
res
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 30000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
res
sample = res[i,1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i])
sample
sample = res[,1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i])
sample = res[,1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i], type="l")
sample = res[-1:1000,1:3]
sample = res[-(1:1000),1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i], type="l")
N = 10000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:1000),1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i], type="l")
N = 15000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:1000),1:3]
par(mfrow = c(1,3))
for(i in 1:3)
plot(sample[,i], type="l")
sample = res[-(1:1000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,1], prob=TRUE, col="blue")
}
sample = res[-(1:1000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
N = 20000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
N = 20000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 20000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 50000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 30000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 30000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
post.means = apply(sample, 2, mean)
post.means
post.means = apply(sample, 2, mean)
p = post.means[1]
l1 = post.means[2]
l2 = post.means[3]
ml = sum(notices*count)/sum(count)
pred = sum(count)*(p*exp(-l1)*l1^notices/factorial(notices) + (1-p)*exp(-l2)*l2^notices/factorial(notices))     exp(-ml)*ml^notices/factorial(notices)
sum(count)*(p*exp(-l1)*l1^notices/factorial(notices))
(1-p)*exp(-l2)*l2^notices/factorial(notices)
pred = sum(count)*(p*exp(-l1)*l1^notices/factorial(notices) + (1-p)*exp(-l2)*l2^notices/factorial(notices))
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
notices = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
count = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1) #the number of observations is sum(count). Assume nbr of deaths
## every day is Poisson(lambda)
ml = sum(notices*count)/sum(count)
pred = sum(count)*exp(-ml)*ml^notices/factorial(notices)
plot(notices, count, type="p", col="red", xlab="death notices", ylab="day count")
lines(notices, pred, type="p", col="blue")
legend("topright", legend=c("actual count", "predicted count"), col=c("red", "blue"), lw=c(1,1))
N = 30000
res = matrix(c(0.5, ml, ml, as.integer(count/2)), nrow = N, ncol = 13, byrow=TRUE)
Y = count
for(i in 2:N){
Z = res[i-1,4:13]
res[i,1] = rbeta(1, sum(Z)+1, sum(Y-Z)+1)
res[i,2] = rgamma(1, sum(Z)+1, sum(Z)+1)
res[i,3] = rgamma(1, sum(Y-Z)+1, sum(Y-Z)+1)
for(j in 4:13){
prob = res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)/(res[i,1]*exp(-res[i,2])*res[i,2]^(j-4)+(1-res[i,1])*exp(-res[i,3])*res[i,3]^(j-4))
res[i,j] = rbinom(1, Y[j-3], prob)
}
}
sample = res[-(1:2000),1:3]
par(mfrow = c(3,2))
for(i in 1:3){
plot(sample[,i], type="l")
hist(sample[,i], prob=TRUE, col="blue")
}
1+1
